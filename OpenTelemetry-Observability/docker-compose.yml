version: '3.8'

services:
  loki:
    image: grafana/loki:latest
    container_name: loki
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    ports:
      - "3100:3100"
    networks:
      - observability-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus-config.yml:/etc/prometheus/prometheus.yml
    command: 
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--enable-feature=exemplar-storage'
    ports:
      - "9090:9090"
    networks:
      - observability-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin_password
    volumes:
      - ./grafana-datasources-config.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - ./dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
      - ./dashboard-grafana.json:/etc/grafana/provisioning/dashboards/dashboard-grafana.json
    depends_on:
      - loki
      - prometheus
    networks:
      - observability-network

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    volumes:
      - ./otel-collector-config.yml:/etc/otel-collector-config.yml
    command: ["--config", "/etc/otel-collector-config.yml"]
    ports:
      - "4317:4317"
      - "8889:8889"
    depends_on:
      - prometheus
      - loki
    networks:
      - observability-network

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
    networks:
      - observability-network

  webobservabilityapplication:
    image: ${DOCKER_REGISTRY-}webobservabilityapplication
    build:
      context: .
      dockerfile: WebObservabilityApplication/Dockerfile
    ports:
    - "8081:8081"
    networks:
      - observability-network

networks:
  observability-network:
    driver: bridge